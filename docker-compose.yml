version: '3.8'

services:
  # MQTT Services (Broker + Backend Server)
  mqtt-services:
    build:
      context: ./mqtt_services
      dockerfile: Dockerfile
    container_name: iot-mqtt-services
    ports:
      - "1883:1883"  # MQTT TCP port
      - "8083:8083"  # MQTT WebSocket port
      - "3001:3001"  # Backend WebSocket server port
    environment:
      - NODE_ENV=production
      - MQTT_HOST=0.0.0.0
      - MQTT_TCP_PORT=1883
      - MQTT_WS_PORT=8083
    networks:
      - iot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "const net = require('net'); const client = net.connect(1883, 'localhost'); client.on('connect', () => { console.log('healthy'); client.end(); process.exit(0); }); client.on('error', () => process.exit(1));"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: iot-frontend
    ports:
      - "5173:5173"    # Frontend dev server port
    environment:
      - BACKEND_URL=http://mqtt-services:3001
    depends_on:
      - mqtt-services
    networks:
      - iot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5173/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    volumes:
      - ./frontend/src:/app/src

networks:
  iot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mqtt-data:
    driver: local
